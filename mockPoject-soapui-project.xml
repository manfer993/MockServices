<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="0b28551d-2ec1-4934-bb39-631dbf7597fb" activeEnvironment="Default" name="mockPoject" resourceRoot="" soapui-version="5.5.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:restMockService id="3c0fda6f-0e8f-4fa0-9a66-8b1c099f7282" port="8080" path="/" host="ML832ZJG5M" name="PrestoService"><con:settings/><con:properties/><con:restMockAction name="/getInfo" method="GET" resourcePath="/getInfo" id="aa98f419-d7e0-4aa0-ad39-f20571e4f64c"><con:settings/><con:defaultResponse>allInfo</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="allInfo" id="f00e3fb8-d34b-4e2e-8144-7bed4a9f4278" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:script>String filePath = "/Users/mmunoz/soapui-workspace/mockresponse1.json"
File responseFile = new File(filePath)
context.setProperty("responseJson",responseFile.text)</con:script><con:responseContent>${responseJson}</con:responseContent></con:response></con:restMockAction></con:restMockService><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>